version: "3.9"
 
services:
  db:
    image: postgres:16-alpine
    container_name: postgres
    restart: always
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: secretpass
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
 
  backend1:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: backend1
    restart: always
    depends_on:
      - db
    environment:
      FLASK_APP: "run.py"
      FLASK_DB_TYPE: "postgres"
      FLASK_DB_USER: "postgres"
      FLASK_DB_NAME: "postgres"
      FLASK_DB_PASSWORD: "secretpass"
      FLASK_DB_HOST: "postgres"
      FLASK_DB_PORT: "5432"

  backend2:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: backend2
    restart: always
    depends_on:
      - db
    environment:
      FLASK_APP: "run.py"
      FLASK_DB_TYPE: "postgres"
      FLASK_DB_USER: "postgres"
      FLASK_DB_NAME: "postgres"
      FLASK_DB_PASSWORD: "secretpass"
      FLASK_DB_HOST: "postgres"
      FLASK_DB_PORT: "5432"

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
      args:
        REACT_APP_BACKEND_URL: /api
    container_name: frontend
    restart: always
    ports:
      - "3000:3000"
    depends_on:
      - backend1
      - backend2

volumes:
  postgres_data: